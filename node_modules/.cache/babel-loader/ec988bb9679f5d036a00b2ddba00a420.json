{"ast":null,"code":"export function fetchImpressions() {\n  return function (dispatch, getState) {\n    var headers = {\n      \"Content-Type\": \"application/json\"\n    };\n    var token = getState().auth.token;\n\n    if (token) {\n      headers[\"Authorization\"] = \"Token \".concat(token);\n    }\n\n    return fetch(\"http://127.0.0.1:8000/api/impressions/\", {\n      headers: headers\n    }).then(function (res) {\n      if (res.status < 500) {\n        return res.json().then(function (data) {\n          return {\n            status: res.status,\n            data: data\n          };\n        });\n      } else {\n        console.log(\"Server Error!\");\n        throw res;\n      }\n    }).then(function (res) {\n      if (res.status === 200) {\n        return dispatch({\n          type: 'FETCH_IMPRESSIONS',\n          impressions: res.data\n        });\n      } else if (res.status === 401 || res.status === 403) {\n        dispatch({\n          type: \"AUTHENTICATION_ERROR\",\n          data: res.data\n        });\n        throw res.data;\n      }\n    });\n  };\n}\nexport function addImpression(player, video, playlist) {\n  return function (dispatch, getState) {\n    var headers = {\n      \"Content-Type\": \"application/json\"\n    };\n    var token = getState().auth.token;\n\n    if (token) {\n      headers[\"Authorization\"] = \"Token \".concat(token);\n    }\n\n    var today = new Date();\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n    var timestamp = date + ' ' + time;\n    var body = JSON.stringify({\n      timestamp: timestamp,\n      player: player,\n      video: video,\n      playlist: playlist\n    });\n    return fetch(\"http://127.0.0.1:8000/api/impressions/\", {\n      headers: headers,\n      method: \"POST\",\n      body: body\n    }).then(function (res) {\n      if (res.status < 500) {\n        return res.json().then(function (data) {\n          return {\n            status: res.status,\n            data: data\n          };\n        });\n      } else {\n        console.log(\"Server Error!\");\n        throw res;\n      }\n    }).then(function (res) {\n      if (res.status === 201) {\n        return dispatch({\n          type: 'ADD_IMPRESSION',\n          impression: res.data\n        });\n      } else if (res.status === 401 || res.status === 403) {\n        dispatch({\n          type: \"AUTHENTICATION_ERROR\",\n          data: res.data\n        });\n        throw res.data;\n      }\n    });\n  };\n}\nexport function deleteImpression(index) {\n  return function (dispatch, getState) {\n    var headers = {\n      \"Content-Type\": \"application/json\"\n    };\n    var token = getState().auth.token;\n\n    if (token) {\n      headers[\"Authorization\"] = \"Token \".concat(token);\n    }\n\n    console.log(getState());\n    var impressionId = getState().impressions[index].id;\n    var base_url = \"http://127.0.0.1:8000/api/impressions/\" + impressionId + \"/\";\n    return fetch(base_url, {\n      headers: headers,\n      method: \"DELETE\"\n    }).then(function (res) {\n      if (res.status === 204) {\n        return {\n          status: res.status,\n          data: {}\n        };\n      } else if (res.status < 500) {\n        return res.json().then(function (data) {\n          return {\n            status: res.status,\n            data: data\n          };\n        });\n      } else {\n        console.log(\"Server Error!\");\n        throw res;\n      }\n    }).then(function (res) {\n      if (res.status === 204) {\n        return dispatch({\n          type: 'DELETE_IMPRESSION',\n          index: index\n        });\n      } else if (res.status === 401 || res.status === 403) {\n        dispatch({\n          type: \"AUTHENTICATION_ERROR\",\n          data: res.data\n        });\n        throw res.data;\n      }\n    });\n  };\n}","map":{"version":3,"sources":["C:\\Users\\Sarah\\PycharmProjects\\admoapi\\admoapireact2\\src\\actions\\impressions.js"],"names":["fetchImpressions","dispatch","getState","headers","token","auth","fetch","then","res","status","json","data","console","log","type","impressions","addImpression","player","video","playlist","today","Date","date","getFullYear","getMonth","getDate","time","getHours","getMinutes","getSeconds","timestamp","body","JSON","stringify","method","impression","deleteImpression","index","impressionId","id","base_url"],"mappings":"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","sourcesContent":["export function fetchImpressions() {\r\n  return (dispatch, getState) => {\r\n    let headers = {\"Content-Type\": \"application/json\"};\r\n    let {token} = getState().auth;\r\n\r\n    if (token) {\r\n      headers[\"Authorization\"] = `Token ${token}`;\r\n    }\r\n\r\n    return fetch(\"http://127.0.0.1:8000/api/impressions/\", {headers, })\r\n      .then(res => {\r\n        if (res.status < 500) {\r\n          return res.json().then(data => {\r\n            return {status: res.status, data};\r\n          })\r\n        } else {\r\n          console.log(\"Server Error!\");\r\n          throw res;\r\n        }\r\n      })\r\n      .then(res => {\r\n        if (res.status === 200) {\r\n          return dispatch({type: 'FETCH_IMPRESSIONS', impressions: res.data});\r\n        } else if (res.status === 401 || res.status === 403) {\r\n          dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\r\n          throw res.data;\r\n        }\r\n      })\r\n  }\r\n}\r\n\r\nexport function addImpression(player, video, playlist) {\r\n  return (dispatch, getState) => {\r\n    let headers = {\"Content-Type\": \"application/json\"};\r\n    let {token} = getState().auth;\r\n\r\n    if (token) {\r\n      headers[\"Authorization\"] = `Token ${token}`;\r\n    }\r\n\r\n    var today = new Date();\r\n    var date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    var timestamp = date+' '+time;\r\n    let body = JSON.stringify({timestamp, player, video, playlist});\r\n    return fetch(\"http://127.0.0.1:8000/api/impressions/\", {headers, method: \"POST\", body})\r\n      .then(res => {\r\n        if (res.status < 500) {\r\n          return res.json().then(data => {\r\n            return {status: res.status, data};\r\n          })\r\n        } else {\r\n          console.log(\"Server Error!\");\r\n          throw res;\r\n        }\r\n      })\r\n      .then(res => {\r\n        if (res.status === 201) {\r\n          return dispatch({type: 'ADD_IMPRESSION', impression: res.data});\r\n        } else if (res.status === 401 || res.status === 403) {\r\n          dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\r\n          throw res.data;\r\n        }\r\n      })\r\n  }\r\n}\r\n\r\n\r\nexport function deleteImpression(index) {\r\n  return (dispatch, getState) => {\r\n\r\n    let headers = {\"Content-Type\": \"application/json\"};\r\n    let {token} = getState().auth;\r\n\r\n    if (token) {\r\n      headers[\"Authorization\"] = `Token ${token}`;\r\n    }\r\n    console.log(getState());\r\n    let impressionId = getState().impressions[index].id;\r\n    let base_url = \"http://127.0.0.1:8000/api/impressions/\"+impressionId+\"/\";\r\n\r\n    return fetch(base_url, {headers, method: \"DELETE\"})\r\n      .then(res => {\r\n        if (res.status === 204) {\r\n          return {status: res.status, data: {}};\r\n        } else if (res.status < 500) {\r\n          return res.json().then(data => {\r\n            return {status: res.status, data};\r\n          })\r\n        } else {\r\n          console.log(\"Server Error!\");\r\n          throw res;\r\n        }\r\n      })\r\n      .then(res => {\r\n        if (res.status === 204) {\r\n          return dispatch({type: 'DELETE_IMPRESSION', index});\r\n        } else if (res.status === 401 || res.status === 403) {\r\n          dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\r\n          throw res.data;\r\n        }\r\n      })\r\n  }}"]},"metadata":{},"sourceType":"module"}