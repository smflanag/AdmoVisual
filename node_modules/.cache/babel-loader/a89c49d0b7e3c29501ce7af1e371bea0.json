{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Sarah\\\\PycharmProjects\\\\admoapi\\\\admoapireact2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nvar initialState = [];\nexport default function playlists() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var playlistList = state.slice();\n\n  switch (action.type) {\n    case 'FETCH_PLAYLISTS':\n      return [].concat(_toConsumableArray(state), _toConsumableArray(action.playlists));\n\n    case 'ADD_PLAYLIST':\n      return [].concat(_toConsumableArray(state), [action.playlist]);\n\n    case 'UPDATE_PLAYLIST':\n      var playlistToUpdate = playlistList[action.index];\n      playlistToUpdate.name = action.playlist.name;\n      playlistList.splice(action.index, 1, playlistToUpdate);\n      return playlistList;\n\n    case 'DELETE_PLAYLIST':\n      playlistList.splice(action.index, 1);\n      return playlistList;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:\\Users\\Sarah\\PycharmProjects\\admoapi\\admoapireact2\\src\\reducers\\playlists.js"],"names":["initialState","playlists","state","action","playlistList","slice","type","playlist","playlistToUpdate","index","name","splice"],"mappings":";AAAA,IAAMA,YAAY,GAAG,EAArB;AAIA,eAAe,SAASC,SAAT,GAA+C;AAAA,MAA5BC,KAA4B,uEAAtBF,YAAsB;AAAA,MAARG,MAAQ;AAC5D,MAAIC,YAAY,GAAGF,KAAK,CAACG,KAAN,EAAnB;;AAEA,UAAQF,MAAM,CAACG,IAAf;AAEE,SAAK,iBAAL;AACI,0CAAWJ,KAAX,sBAAqBC,MAAM,CAACF,SAA5B;;AAEJ,SAAK,cAAL;AACE,0CAAWC,KAAX,IAAkBC,MAAM,CAACI,QAAzB;;AAEF,SAAK,iBAAL;AACE,UAAIC,gBAAgB,GAAGJ,YAAY,CAACD,MAAM,CAACM,KAAR,CAAnC;AACAD,MAAAA,gBAAgB,CAACE,IAAjB,GAAwBP,MAAM,CAACI,QAAP,CAAgBG,IAAxC;AACAN,MAAAA,YAAY,CAACO,MAAb,CAAoBR,MAAM,CAACM,KAA3B,EAAkC,CAAlC,EAAqCD,gBAArC;AACA,aAAOJ,YAAP;;AAEF,SAAK,iBAAL;AACEA,MAAAA,YAAY,CAACO,MAAb,CAAoBR,MAAM,CAACM,KAA3B,EAAkC,CAAlC;AACA,aAAOL,YAAP;;AAEF;AACE,aAAOF,KAAP;AAnBJ;AAqBD","sourcesContent":["const initialState = [\r\n\r\n];\r\n\r\nexport default function playlists(state=initialState, action) {\r\n  let playlistList = state.slice();\r\n\r\n  switch (action.type) {\r\n\r\n    case 'FETCH_PLAYLISTS':\r\n        return [...state, ...action.playlists];\r\n\r\n    case 'ADD_PLAYLIST':\r\n      return [...state, action.playlist];\r\n\r\n    case 'UPDATE_PLAYLIST':\r\n      let playlistToUpdate = playlistList[action.index]\r\n      playlistToUpdate.name = action.playlist.name;\r\n      playlistList.splice(action.index, 1, playlistToUpdate);\r\n      return playlistList;\r\n\r\n    case 'DELETE_PLAYLIST':\r\n      playlistList.splice(action.index, 1);\r\n      return playlistList;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}