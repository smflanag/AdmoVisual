{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Sarah\\\\PycharmProjects\\\\admoapi\\\\admoapireact2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Sarah\\\\PycharmProjects\\\\admoapi\\\\admoapireact2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Sarah\\\\PycharmProjects\\\\admoapi\\\\admoapireact2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Sarah\\\\PycharmProjects\\\\admoapi\\\\admoapireact2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Sarah\\\\PycharmProjects\\\\admoapi\\\\admoapireact2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sarah\\\\PycharmProjects\\\\admoapi\\\\admoapireact2\\\\src\\\\ImpressionList.js\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport ImpressionList from './components/Impressions';\n\nvar AllImpressionList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AllImpressionList, _Component);\n\n  function AllImpressionList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AllImpressionList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AllImpressionList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      impressions: []\n    };\n    return _this;\n  }\n\n  _createClass(AllImpressionList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"http://127.0.0.1:8000/impressions\").then(function (response) {\n        //create an array of videos only with relevant data\n        var newImpressions = response.data.map(function (i) {\n          return {\n            id: i.id,\n            timestamp: i.timestamp,\n            player: i.player,\n            video: i.video,\n            playlist: i.playlist\n          };\n        }); //create a new \"State\" object without mutating the original State object\n\n        var newState = Object.assign({}, _this2.state, {\n          impressions: newImpressions\n        }); // store the new state object in the component's state\n\n        _this2.setState(newState);\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(ImpressionList, {\n        impressions: this.state.impressions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AllImpressionList;\n}(Component);\n\nexport default AllImpressionList;","map":{"version":3,"sources":["C:\\Users\\Sarah\\PycharmProjects\\admoapi\\admoapireact2\\src\\ImpressionList.js"],"names":["React","Component","axios","ImpressionList","AllImpressionList","state","impressions","get","then","response","newImpressions","data","map","i","id","timestamp","player","video","playlist","newState","Object","assign","setState","catch","error","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;;IAEMC,iB;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,WAAW,EAAE;AADT,K;;;;;;wCAIY;AAAA;;AAChBJ,MAAAA,KAAK,CACJK,GADD,CACK,mCADL,EAECC,IAFD,CAEM,UAAAC,QAAQ,EAAI;AAClB;AACI,YAAMC,cAAc,GAAGD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkB,UAAAC,CAAC,EAAI;AAC9C,iBAAO;AACHC,YAAAA,EAAE,EAAED,CAAC,CAACC,EADH;AAEHC,YAAAA,SAAS,EAAEF,CAAC,CAACE,SAFV;AAGHC,YAAAA,MAAM,EAAEH,CAAC,CAACG,MAHP;AAIHC,YAAAA,KAAK,EAAEJ,CAAC,CAACI,KAJN;AAKHC,YAAAA,QAAQ,EAAEL,CAAC,CAACK;AALT,WAAP;AAOC,SARsB,CAAvB,CAFc,CAWlB;;AACI,YAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,MAAI,CAAChB,KAAvB,EAA8B;AAC3CC,UAAAA,WAAW,EAAEI;AAD8B,SAA9B,CAAjB,CAZc,CAelB;;AACI,QAAA,MAAI,CAACY,QAAL,CAAcH,QAAd;AACH,OAnBD,EAoBCI,KApBD,CAoBO,UAAAC,KAAK;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,OApBZ;AAqBH;;;6BAEM;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AAAgB,QAAA,WAAW,EAAE,KAAKnB,KAAL,CAAWC,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;;;EApC6BL,S;;AAuChC,eAAeG,iBAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport ImpressionList from './components/Impressions';\r\n\r\nclass AllImpressionList extends Component {\r\n    // default State object\r\n    state = {\r\n        impressions: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        axios\r\n        .get(\"http://127.0.0.1:8000/impressions\")\r\n        .then(response => {\r\n        //create an array of videos only with relevant data\r\n            const newImpressions = response.data.map(i => {\r\n            return {\r\n                id: i.id,\r\n                timestamp: i.timestamp,\r\n                player: i.player,\r\n                video: i.video,\r\n                playlist: i.playlist\r\n                };\r\n            });\r\n        //create a new \"State\" object without mutating the original State object\r\n            const newState = Object.assign({}, this.state, {\r\n                impressions: newImpressions\r\n            });\r\n        // store the new state object in the component's state\r\n            this.setState(newState);\r\n        })\r\n        .catch(error => console.log(error));\r\n    };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ImpressionList impressions={this.state.impressions} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AllImpressionList;"]},"metadata":{},"sourceType":"module"}