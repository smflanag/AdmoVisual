{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Sarah\\\\PycharmProjects\\\\admoapi\\\\admoapireact2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Sarah\\\\PycharmProjects\\\\admoapi\\\\admoapireact2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Sarah\\\\PycharmProjects\\\\admoapi\\\\admoapireact2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Sarah\\\\PycharmProjects\\\\admoapi\\\\admoapireact2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Sarah\\\\PycharmProjects\\\\admoapi\\\\admoapireact2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sarah\\\\PycharmProjects\\\\admoapi\\\\admoapireact2\\\\src\\\\ImpressionList.js\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { impressions, auth } from \"./actions/index\";\n\nvar AllImpressionList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AllImpressionList, _Component);\n\n  function AllImpressionList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AllImpressionList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AllImpressionList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      //        player: \"\",\n      //        video: \"\",\n      //        playlist: \"\",\n      updateImpressionId: null,\n      dropdownPlayers: [],\n      selectedPlayer: \"\",\n      dropdownPlaylists: [],\n      selectedPlaylist: \"\",\n      dropdownVideos: [],\n      selectedVideo: \"\",\n      validationError: \"\"\n    };\n\n    _this.resetForm = function () {\n      _this.setState({\n        player: \"\",\n        video: \"\",\n        playlist: \"\",\n        updateImpressionId: null\n      });\n    };\n\n    _this.submitImpression = function (e) {\n      e.preventDefault();\n\n      if (_this.state.updateImpressionId === null) {\n        _this.props.addImpression(_this.state.selectedPlayer, _this.state.selectedVideo, _this.state.selectedPlaylist).then(_this.resetForm);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(AllImpressionList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.props.fetchImpressions();\n      fetch(\"http://127.0.0.1:8000/api/playlists/\").then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        var playlistsFromApi = data.map(function (dropdownPlaylist) {\n          return {\n            value: dropdownPlaylist.id,\n            display: dropdownPlaylist.name\n          };\n        });\n\n        _this2.setState({\n          dropdownPlaylists: [{\n            value: '',\n            display: '(Select the playlist)'\n          }].concat(playlistsFromApi)\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n      fetch(\"http://127.0.0.1:8000/api/videos/\").then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        var videosFromApi = data.map(function (dropdownVideo) {\n          return {\n            value: dropdownVideo.id,\n            display: dropdownVideo.name\n          };\n        });\n\n        _this2.setState({\n          dropdownVideos: [{\n            value: '',\n            display: '(Select the video)'\n          }].concat(videosFromApi)\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n      fetch(\"http://127.0.0.1:8000/api/players/\").then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        var playersFromApi = data.map(function (dropdownPlayer) {\n          return {\n            value: dropdownPlayer.id,\n            display: dropdownPlayer.name\n          };\n        });\n\n        _this2.setState({\n          dropdownPlayers: [{\n            value: '',\n            display: '(Select the player device name)'\n          }].concat(playersFromApi)\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Add Impression\"), React.createElement(\"form\", {\n        onSubmit: this.submitImpression,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        value: this.state.selectedPlayer,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            selectedPlayer: e.target.value,\n            validationError: e.target.value === \"\" ? \"You must select the player\" : \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, this.state.dropdownPlayers.map(function (dropdownPlayer) {\n        return React.createElement(\"option\", {\n          key: dropdownPlayer.value,\n          value: dropdownPlayer.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, dropdownPlayer.display);\n      })), React.createElement(\"select\", {\n        value: this.state.selectedVideo,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            selectedVideo: e.target.value,\n            validationError: e.target.value === \"\" ? \"You must select the video\" : \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, this.state.dropdownVideos.map(function (dropdownVideo) {\n        return React.createElement(\"option\", {\n          key: dropdownVideo.value,\n          value: dropdownVideo.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, dropdownVideo.display);\n      })), React.createElement(\"select\", {\n        value: this.state.selectedPlaylist,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            selectedPlaylist: e.target.value,\n            validationError: e.target.value === \"\" ? \"You must select the playlist\" : \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, this.state.dropdownPlaylists.map(function (dropdownPlaylist) {\n        return React.createElement(\"option\", {\n          key: dropdownPlaylist.value,\n          value: dropdownPlaylist.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, dropdownPlaylist.display);\n      })), React.createElement(\"button\", {\n        onClick: this.resetForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Reset\"), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Save Impression\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Impressions\"), React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, this.props.impressions.map(function (impression, id) {\n        return React.createElement(\"tr\", {\n          key: \"impression_\".concat(impression.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, impression.timestamp), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, impression.player.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, impression.video.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, impression.playlist.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this3.props.deleteImpression(id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, \"delete\")));\n      }))));\n    }\n  }]);\n\n  return AllImpressionList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    impressions: state.impressions,\n    user: state.auth.user\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchImpressions: function fetchImpressions() {\n      dispatch(impressions.fetchImpressions());\n    },\n    addImpression: function addImpression(player, video, playlist) {\n      return dispatch(impressions.addImpression(player, video, playlist));\n    },\n    deleteImpression: function deleteImpression(id) {\n      dispatch(impressions.deleteImpression(id));\n    },\n    logout: function logout() {\n      return dispatch(auth.logout());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AllImpressionList);","map":{"version":3,"sources":["C:\\Users\\Sarah\\PycharmProjects\\admoapi\\admoapireact2\\src\\ImpressionList.js"],"names":["React","Component","connect","impressions","auth","AllImpressionList","state","updateImpressionId","dropdownPlayers","selectedPlayer","dropdownPlaylists","selectedPlaylist","dropdownVideos","selectedVideo","validationError","resetForm","setState","player","video","playlist","submitImpression","e","preventDefault","props","addImpression","then","fetchImpressions","fetch","response","json","data","playlistsFromApi","map","dropdownPlaylist","value","id","display","name","concat","catch","error","console","log","videosFromApi","dropdownVideo","playersFromApi","dropdownPlayer","target","impression","timestamp","deleteImpression","mapStateToProps","user","mapDispatchToProps","dispatch","logout"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport { impressions, auth} from \"./actions/index\";\r\n\r\n\r\n\r\nclass AllImpressionList extends Component {\r\n    state = {\r\n//        player: \"\",\r\n//        video: \"\",\r\n//        playlist: \"\",\r\n        updateImpressionId: null,\r\n        dropdownPlayers: [],\r\n        selectedPlayer: \"\",\r\n        dropdownPlaylists: [],\r\n        selectedPlaylist: \"\",\r\n        dropdownVideos: [],\r\n        selectedVideo: \"\",\r\n        validationError: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchImpressions();\r\n\r\n        fetch(\"http://127.0.0.1:8000/api/playlists/\")\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        let playlistsFromApi = data.map(dropdownPlaylist => { return {value: dropdownPlaylist.id, display: dropdownPlaylist.name} })\r\n        this.setState({ dropdownPlaylists: [{value: '', display: '(Select the playlist)'}].concat(playlistsFromApi) });\r\n      }).catch(error => {\r\n        console.log(error);\r\n      });\r\n\r\n      fetch(\"http://127.0.0.1:8000/api/videos/\")\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        let videosFromApi = data.map(dropdownVideo => { return {value: dropdownVideo.id, display: dropdownVideo.name} })\r\n        this.setState({ dropdownVideos: [{value: '', display: '(Select the video)'}].concat(videosFromApi) });\r\n      }).catch(error => {\r\n        console.log(error);\r\n      });\r\n      fetch(\"http://127.0.0.1:8000/api/players/\")\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        let playersFromApi = data.map(dropdownPlayer => { return {value: dropdownPlayer.id, display: dropdownPlayer.name} })\r\n        this.setState({ dropdownPlayers: [{value: '', display: '(Select the player device name)'}].concat(playersFromApi) });\r\n      }).catch(error => {\r\n        console.log(error);\r\n      });\r\n    }\r\n\r\n    resetForm = () => {\r\n        this.setState({player: \"\",video: \"\", playlist: \"\", updateImpressionId: null});\r\n    }\r\n\r\n//    selectForEdit = (id) => {\r\n//        let impression = this.props.impressions[id];\r\n//        this.setState({player: impression.player, video: impression.video, playlist: impression.playlist, updateImpressionId: id});\r\n//    }\r\n\r\n    submitImpression = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.updateImpressionId === null) {\r\n            this.props.addImpression(this.state.selectedPlayer, this.state.selectedVideo, this.state.selectedPlaylist).then(this.resetForm)\r\n        }\r\n    }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n\r\n\r\n\r\n        <h3>Add Impression</h3>\r\n            <form onSubmit={this.submitImpression}>\r\n                <select value={this.state.selectedPlayer}\r\n                onChange={(e) => this.setState({selectedPlayer: e.target.value, validationError: e.target.value === \"\" ? \"You must select the player\" : \"\"})}>\r\n          {this.state.dropdownPlayers.map((dropdownPlayer) => <option key={dropdownPlayer.value} value={dropdownPlayer.value}>{dropdownPlayer.display}</option>)}\r\n        </select>\r\n                <select value={this.state.selectedVideo}\r\n                onChange={(e) => this.setState({selectedVideo: e.target.value, validationError: e.target.value === \"\" ? \"You must select the video\" : \"\"})}>\r\n          {this.state.dropdownVideos.map((dropdownVideo) => <option key={dropdownVideo.value} value={dropdownVideo.value}>{dropdownVideo.display}</option>)}\r\n        </select>\r\n                <select value={this.state.selectedPlaylist}\r\n                onChange={(e) => this.setState({selectedPlaylist: e.target.value, validationError: e.target.value === \"\" ? \"You must select the playlist\" : \"\"})}>\r\n          {this.state.dropdownPlaylists.map((dropdownPlaylist) => <option key={dropdownPlaylist.value} value={dropdownPlaylist.value}>{dropdownPlaylist.display}</option>)}\r\n        </select>\r\n                <button onClick={this.resetForm}>Reset</button>\r\n                <input type=\"submit\" value=\"Save Impression\" />\r\n            </form>\r\n\r\n\r\n            <h3>Impressions</h3>\r\n            <table>\r\n              <tbody>\r\n                {this.props.impressions.map((impression, id) => (\r\n                  <tr key={`impression_${impression.id}`}>\r\n                    <td>{impression.timestamp}</td>\r\n                    <td>{impression.player.name}</td>\r\n                    <td>{impression.video.name}</td>\r\n                    <td>{impression.playlist.name}</td>\r\n\r\n                    <td><button onClick={() => this.props.deleteImpression(id)}>delete</button></td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    impressions: state.impressions,\r\n    user: state.auth.user,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchImpressions: () => {\r\n      dispatch(impressions.fetchImpressions());\r\n    },\r\n    addImpression: (player, video, playlist) => {\r\n      return dispatch(impressions.addImpression(player, video, playlist));\r\n    },\r\n\r\n    deleteImpression: (id) => {\r\n      dispatch(impressions.deleteImpression(id));\r\n    },\r\n    logout: () => dispatch(auth.logout()),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AllImpressionList);"]},"metadata":{},"sourceType":"module"}