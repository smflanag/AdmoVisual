{"ast":null,"code":"export function loadUser() {\n  return function (dispatch, getState) {\n    dispatch({\n      type: \"USER_LOADING\"\n    });\n    var token = getState().auth.token;\n    var headers = {\n      \"Content-Type\": \"application/json\"\n    };\n\n    if (token) {\n      headers[\"Authorization\"] = \"Token \".concat(token);\n    }\n\n    return fetch(\"http://127.0.0.1:8000/api/auth/user/\", {\n      headers: headers\n    }).then(function (res) {\n      if (res.status < 500) {\n        return res.json().then(function (data) {\n          return {\n            status: res.status,\n            data: data\n          };\n        });\n      } else {\n        console.log(\"Server Error!\");\n      }\n    }).then(function (res) {\n      if (res.status === 200) {\n        dispatch({\n          type: 'USER_LOADED',\n          user: res.data\n        });\n      } else if (res.status >= 400 && res.status < 500) {\n        dispatch({\n          type: \"AUTHENTICATION_ERROR\",\n          data: res.data\n        });\n      }\n    });\n  };\n}\nexport function login(username, password) {\n  return function (dispatch, getState) {\n    var headers = {\n      \"Content-Type\": \"application/json\"\n    };\n    var body = JSON.stringify({\n      username: username,\n      password: password\n    });\n    return fetch(\"http://127.0.0.1:8000/api/auth/login/\", {\n      headers: headers,\n      body: body,\n      method: \"POST\"\n    }).then(function (res) {\n      if (res.status < 500) {\n        return res.json().then(function (data) {\n          return {\n            status: res.status,\n            data: data\n          };\n        });\n      } else {\n        console.log(\"Server Error!\");\n        throw res;\n      }\n    }).then(function (res) {\n      if (res.status === 200) {\n        dispatch({\n          type: 'LOGIN_SUCCESSFUL',\n          data: res.data\n        });\n        return res.data;\n      } else if (res.status === 403 || res.status === 401) {\n        dispatch({\n          type: \"AUTHENTICATION_ERROR\",\n          data: res.data\n        });\n        throw res.data;\n      } else {\n        dispatch({\n          type: \"LOGIN_FAILED\",\n          data: res.data\n        });\n        throw res.data;\n      }\n    });\n  };\n}\nexport var register = function register(username, password) {\n  return function (dispatch, getState) {\n    var headers = {\n      \"Content-Type\": \"application/json\"\n    };\n    var body = JSON.stringify({\n      username: username,\n      password: password\n    });\n    return fetch(\"http://127.0.0.1:8000/api/auth/register/\", {\n      headers: headers,\n      body: body,\n      method: \"POST\"\n    }).then(function (res) {\n      if (res.status < 500) {\n        return res.json().then(function (data) {\n          return {\n            status: res.status,\n            data: data\n          };\n        });\n      } else {\n        console.log(\"Server Error!\");\n        throw res;\n      }\n    }).then(function (res) {\n      if (res.status === 200) {\n        dispatch({\n          type: 'REGISTRATION_SUCCESSFUL',\n          data: res.data\n        });\n        return res.data;\n      } else if (res.status === 403 || res.status === 401) {\n        dispatch({\n          type: \"AUTHENTICATION_ERROR\",\n          data: res.data\n        });\n        throw res.data;\n      } else {\n        dispatch({\n          type: \"REGISTRATION_FAILED\",\n          data: res.data\n        });\n        throw res.data;\n      }\n    });\n  };\n};\nexport var logout = function logout() {\n  return function (dispatch, getState) {\n    var headers = {\n      \"Content-Type\": \"application/json\"\n    };\n    return fetch(\"http://127.0.0.1:8000/api/auth/logout/\", {\n      headers: headers,\n      body: \"\",\n      method: \"POST\"\n    }).then(function (res) {\n      if (res.status === 204) {\n        return {\n          status: res.status,\n          data: {}\n        };\n      } else if (res.status < 500) {\n        return res.json().then(function (data) {\n          return {\n            status: res.status,\n            data: data\n          };\n        });\n      } else {\n        console.log(\"Server Error!\");\n        throw res;\n      }\n    }).then(function (res) {\n      if (res.status === 204) {\n        dispatch({\n          type: 'LOGOUT_SUCCESSFUL'\n        });\n        return res.data;\n      } else if (res.status === 403 || res.status === 401) {\n        dispatch({\n          type: \"AUTHENTICATION_ERROR\",\n          data: res.data\n        });\n        throw res.data;\n      }\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Users\\Sarah\\PycharmProjects\\admoapi\\admoapireact2\\src\\actions\\auth.js"],"names":["loadUser","dispatch","getState","type","token","auth","headers","fetch","then","res","status","json","data","console","log","user","login","username","password","body","JSON","stringify","method","register","logout"],"mappings":"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","sourcesContent":["export function loadUser() {\r\n  return function (dispatch, getState) {\r\n    dispatch({type: \"USER_LOADING\"});\r\n\r\n    const token = getState().auth.token;\r\n\r\n    let headers = {\r\n      \"Content-Type\": \"application/json\",\r\n    };\r\n\r\n    if (token) {\r\n      headers[\"Authorization\"] = `Token ${token}`;\r\n    }\r\n    return fetch(\"http://127.0.0.1:8000/api/auth/user/\", {headers, })\r\n      .then(res => {\r\n        if (res.status < 500) {\r\n          return res.json().then(data => {\r\n            return {status: res.status, data};\r\n          })\r\n        } else {\r\n          console.log(\"Server Error!\");\r\n        }\r\n      })\r\n      .then(res => {\r\n        if (res.status === 200) {\r\n          dispatch({type: 'USER_LOADED', user: res.data });\r\n        } else if (res.status >= 400 && res.status < 500) {\r\n          dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\r\n        }\r\n      })\r\n  }\r\n}\r\n\r\nexport function login(username,password) {\r\n  return (dispatch, getState) => {\r\n    let headers = {\"Content-Type\": \"application/json\"};\r\n    let body = JSON.stringify({username, password});\r\n\r\n    return fetch(\"http://127.0.0.1:8000/api/auth/login/\", {headers, body, method: \"POST\"})\r\n      .then(res => {\r\n        if (res.status < 500) {\r\n          return res.json().then(data => {\r\n            return {status: res.status, data};\r\n          })\r\n        } else {\r\n          console.log(\"Server Error!\");\r\n          throw res;\r\n        }\r\n      })\r\n      .then(res => {\r\n        if (res.status === 200) {\r\n          dispatch({type: 'LOGIN_SUCCESSFUL', data: res.data });\r\n          return res.data;\r\n        } else if (res.status === 403 || res.status === 401) {\r\n          dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\r\n          throw res.data;\r\n        } else {\r\n          dispatch({type: \"LOGIN_FAILED\", data: res.data});\r\n          throw res.data;\r\n        }\r\n      })\r\n  }\r\n}\r\n\r\nexport const register = (username, password) => {\r\n  return (dispatch, getState) => {\r\n    let headers = {\"Content-Type\": \"application/json\"};\r\n    let body = JSON.stringify({username, password});\r\n\r\n    return fetch(\"http://127.0.0.1:8000/api/auth/register/\", {headers, body, method: \"POST\"})\r\n      .then(res => {\r\n        if (res.status < 500) {\r\n          return res.json().then(data => {\r\n            return {status: res.status, data};\r\n          })\r\n        } else {\r\n          console.log(\"Server Error!\");\r\n          throw res;\r\n        }\r\n      })\r\n      .then(res => {\r\n        if (res.status === 200) {\r\n          dispatch({type: 'REGISTRATION_SUCCESSFUL', data: res.data });\r\n          return res.data;\r\n        } else if (res.status === 403 || res.status === 401) {\r\n          dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\r\n          throw res.data;\r\n        } else {\r\n          dispatch({type: \"REGISTRATION_FAILED\", data: res.data});\r\n          throw res.data;\r\n        }\r\n      })\r\n  }\r\n}\r\n\r\nexport const logout = () => {\r\n  return (dispatch, getState) => {\r\n    let headers = {\"Content-Type\": \"application/json\"};\r\n\r\n    return fetch(\"http://127.0.0.1:8000/api/auth/logout/\", {headers, body: \"\", method: \"POST\"})\r\n      .then(res => {\r\n        if (res.status === 204) {\r\n          return {status: res.status, data: {}};\r\n        } else if (res.status < 500) {\r\n          return res.json().then(data => {\r\n            return {status: res.status, data};\r\n          })\r\n        } else {\r\n          console.log(\"Server Error!\");\r\n          throw res;\r\n        }\r\n      })\r\n      .then(res => {\r\n        if (res.status === 204) {\r\n          dispatch({type: 'LOGOUT_SUCCESSFUL'});\r\n          return res.data;\r\n        } else if (res.status === 403 || res.status === 401) {\r\n          dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\r\n          throw res.data;\r\n        }\r\n      })\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}